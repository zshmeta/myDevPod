---
##
## -------------------------
## |  M Y   D E V   P O D  |
## -------------------------
#--------------------------------------------------
##       | by zshmeta |
#--------------------------------------------------
##    | Inspired by the devpod |
#--------------------------------------------------
################################################################################
# VERSION

version: '2.3'

################################################################################
# SERVICES
################################################################################
services:

  # ------------------------------------------------------------
  # Bind (DNS Server)
  # ------------------------------------------------------------
  bind:
    image: zshmeta/podbind
    hostname: bind
    restart: always
    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_BIND:-1053}:53/tcp"
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_BIND:-1053}:53/udp"

    environment:
        # These Options were set according to research online and docker documentation
      ##
      ## Memory consumption
      ##
      - MAX_CACHE_SIZE=${BIND_MAX_CACHE_SIZE:-90%}

      ##
      ## Bind wildcard/host settings
      ##
      - DNS_A=*.${TLD_SUFFIX:-loc}=127.0.0.1,${EXTRA_HOSTS:-}

      ##
      ## Forwarding
      ##
      - DNS_FORWARDER=${BIND_DNS_RESOLVER:-8.8.8.8,8.8.4.4}

      ##
      ## Security
      ##
      - DNSSEC_VALIDATE=${BIND_DNSSEC_VALIDATE:-no}

      ##
      ## Time settings
      ##
      - TTL_TIME=${BIND_TTL_TIME}
      - REFRESH_TIME=${BIND_REFRESH_TIME}
      - RETRY_TIME=${BIND_RETRY_TIME}
      - EXPIRY_TIME=${BIND_EXPIRY_TIME}
      - MAX_CACHE_TIME=${BIND_MAX_CACHE_TIME}

      ##
      ## Query log
      ##
      - DOCKER_LOGS=${BIND_LOG_DNS_QUERIES}

      ##
      ## Debug?
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}


    dns:
      - 127.0.0.1

    # MacOS and Windows have this by default, this hack also allows it for Linux
    extra_hosts:
      docker.for.lin.host.internal: 172.16.238.1
      docker.for.lin.localhost: 172.16.238.1
      host.docker.internal: host-gateway

    networks:
      app_net:
        ipv4_address: 172.16.238.100


  # ------------------------------------------------------------
  # PHP
  # ------------------------------------------------------------
  php:
    image: zshmeta/php-fpm-8.1
    hostname: php

    ##
    ## Source all variables defined in .env
    ##
    env_file:
      - ./.env

    environment:
      ##
      ## Supervisord Management (to connect to HTTPD supvervisord)
      ##
      - SVCTL_LISTEN_PORT=9001
      - SVCTL_USER=${DEVPOD_HTTPD_MGMT_USER:-supervisor}
      - SVCTL_PASS=${DEVPOD_HTTPD_MGMT_PASS:-mypassword}

      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DOCKER_LOGS

      ##
      ## Tools
      ##
      - COMPOSER_MEMORY_LIMIT=-1

      ##
      ## UserID and GroupID
      ##
      - NEW_UID     # 1000  #  Adjust here
      - NEW_GID      # 1000 # Adjust here

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## Enable/Disable PHP Modules
      ##
      - ENABLE_MODULES=${PHP_MODULES_ENABLE}
      - DISABLE_MODULES=${PHP_MODULES_DISABLE}

      ##
      ## Mail-catching
      ##
      - ENABLE_MAIL=${PHP_MAIL_CATCH_ALL:-2}

      ##
      ## Enable 127.0.0.1 Port-forwarding
      ##
      - FORWARD_PORTS_TO_LOCALHOST=80:httpd:80,443:httpd:443,3306:mysql:3306,5432:pgsql:5432,6379:redis:6379,11211:memcd:11211,27017:mongo:27017

      ##
      ## MySQL Backups
      ##
      - MYSQL_BACKUP_USER=root
      - MYSQL_BACKUP_PASS=${MYSQL_ROOT_PASSWORD}
      - MYSQL_BACKUP_HOST=mysql

    dns:
      - 172.16.238.100

    # MacOS and Windows have this by default, this hack also allows it for Linux
    extra_hosts:
      docker.for.lin.host.internal: 172.16.238.1
      docker.for.lin.localhost: 172.16.238.1
      host.docker.internal: host-gateway

    networks:
      app_net:
        ipv4_address: 172.16.238.10

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${DEVPOD_PATH}/.devpod/www:/var/www/default:ro${MOUNT_OPTIONS}

      # Mount custom mass virtual hosting
      - ${HOST_PATH_HTTPD_DATADIR}:/shared/httpd:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${DEVPOD_PATH}/log/php-fpm-${PHP_SERVER}:/var/log/php:rw${MOUNT_OPTIONS}

      # Mount Mail directory
      - devpod-mail:/var/mail:rw${MOUNT_OPTIONS}

      # Mount DB Backup directory
      - ${HOST_PATH_BACKUPDIR:-./backups}:/shared/backups:rw${MOUNT_OPTIONS}

      # Mount devpod user-defined *.ini files in order
      # to overwrite the default PHP.ini configuration
      - ${DEVPOD_PATH}/cfg/php-ini-${PHP_SERVER}:/etc/php-custom.d:ro${MOUNT_OPTIONS}

      # Mount devpod user-defined PHP-FPM *.conf files in order
      # to overwrite the default PHP-FPM configuration
      - ${DEVPOD_PATH}/cfg/php-fpm-${PHP_SERVER}:/etc/php-fpm-custom.d:ro${MOUNT_OPTIONS}

      # Mount devpod user-defined PHP-FPM startup *.sh scripts
      - ${DEVPOD_PATH}/cfg/php-startup-${PHP_SERVER}:/startup.1.d:rw${MOUNT_OPTIONS}
      - ${DEVPOD_PATH}/autostart:/startup.2.d:rw${MOUNT_OPTIONS}

      # Mount devpod user-defined bash config
      - ${DEVPOD_PATH}/bash:/etc/bashrc-devpod.d:rw${MOUNT_OPTIONS}

      # Mount devpod user-defined supervisord config
      - ${DEVPOD_PATH}/supervisor:/etc/supervisor/custom.d:rw${MOUNT_OPTIONS}

      # Certificate Authority public key
      - ${DEVPOD_PATH}/ca:/ca:rw${MOUNT_OPTIONS}

      # Users SSH directory (read-only)
      - ${HOST_PATH_SSH_DIR}:/home/devpod/.ssh:ro${MOUNT_OPTIONS}

    depends_on:
      - bind


  # ------------------------------------------------------------
  # Web Server
  # ------------------------------------------------------------
  httpd:
    image: zshmeta/${HTTPD_SERVER}:${HTTPD_FLAVOUR:-alpine}
    hostname: httpd

    environment:

      ##
      ## Supervisord Management
      ##
      - SVCTL_ENABLE=1
      - SVCTL_LISTEN_ADDR=0.0.0.0
      - SVCTL_LISTEN_PORT=9001
      - SVCTL_REMOTE_LOGS_ENABLE=1
      - SVCTL_USER=${DEVPOD_HTTPD_MGMT_USER:-supervisor}
      - SVCTL_PASS=${DEVPOD_HTTPD_MGMT_PASS:-mypassword}

      ##
      ## Debug/Logging
      ##
      - DEBUG_ENTRYPOINT=${DEBUG_ENTRYPOINT:-2}
      - DEBUG_RUNTIME=1
      - DOCKER_LOGS

      ##
      ## Adjust timezone
      ##
      - TIMEZONE

      ##
      ## UserID and GroupID
      ##
      - NEW_UID   # Adjust here. check by running: id -u
      - NEW_GID  # Adjust here. check by running: id -g
      ##
      ## Nginx specific worker/connection settings
      ##
      - WORKER_PROCESSES=${HTTPD_NGINX_WORKER_PROCESSES:-auto}
      - WORKER_CONNECTIONS=${HTTPD_NGINX_WORKER_CONNECTIONS:-1024}

      ##
      ## Globally enable/disable HTTP/2
      ##
      - HTTP2_ENABLE=${HTTPD_HTTP2_ENABLE:-1}

      ##
      ## Disable default vhost?
      ##
      - MAIN_VHOST_ENABLE=${DEVPOD_UI_ENABLE}
      - MAIN_VHOST_STATUS_ENABLE=1
      - MAIN_VHOST_STATUS_ALIAS=/devpod-httpd-status
      - MAIN_VHOST_SSL_TYPE=${HTTPD_VHOST_SSL_TYPE:-both}
      - MAIN_VHOST_SSL_GEN=1
      - MAIN_VHOST_SSL_CN=${DEVPOD_UI_SSL_CN:-localhost}
      - MAIN_VHOST_BACKEND=conf:phpfpm:tcp:172.16.238.10:9000
      - MAIN_VHOST_BACKEND_TIMEOUT=${HTTPD_BACKEND_TIMEOUT:-180}
      - MAIN_VHOST_ALIASES_ALLOW=/devpod-api/:/var/www/default/api, /vhost.d/:/etc/httpd

      ##
      ## Enable Mass Vhosts
      ##
      - MASS_VHOST_ENABLE=1
      - MASS_VHOST_TLD_SUFFIX=.${TLD_SUFFIX}
      - MASS_VHOST_DOCROOT_DIR=${HTTPD_DOCROOT_DIR}
      - MASS_VHOST_TEMPLATE_DIR=${HTTPD_TEMPLATE_DIR}
      - MASS_VHOST_SSL_TYPE=${HTTPD_VHOST_SSL_TYPE:-both}
      - MASS_VHOST_SSL_GEN=1
      - MASS_VHOST_BACKEND=conf:phpfpm:tcp:172.16.238.10:9000
      - MASS_VHOST_BACKEND_REWRITE=file:backend.cfg
      - MASS_VHOST_BACKEND_TIMEOUT=${HTTPD_BACKEND_TIMEOUT:-180}
      - MASS_VHOST_ALIASES_ALLOW=/devpod-api/:/var/www/default/api:http(s)?://(.*)$$

    ports:
      # ---- Format: ----
      # [HOST-ADDR : ] HOST-PORT : DOCKER-PORT
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_HTTPD}:80"
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_HTTPD_SSL}:443"

    networks:
      app_net:
        ipv4_address: 172.16.238.11

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount custom intranet
      - ${DEVPOD_PATH}/.devpod/www:/var/www/default:ro${MOUNT_OPTIONS}

      # Mount custom mass virtual hosting
      - ${HOST_PATH_HTTPD_DATADIR}:/shared/httpd:rw${MOUNT_OPTIONS}

      # Mount custom web server config directory
      - ${DEVPOD_PATH}/cfg/${HTTPD_SERVER}:/etc/httpd-custom.d:rw${MOUNT_OPTIONS}

      # Mount custom vhost-templates
      - ${DEVPOD_PATH}/cfg/vhost-gen:/etc/vhost-gen.d:rw${MOUNT_OPTIONS}

      # Mount logs
      - ${DEVPOD_PATH}/log/${HTTPD_SERVER}:/var/log/httpd:rw${MOUNT_OPTIONS}

      # Certificate Authority public key
      - ${DEVPOD_PATH}/ca:/ca:rw${MOUNT_OPTIONS}

    depends_on:
      - bind
      - php


  # ------------------------------------------------------------
  # MySQL Database
  # ------------------------------------------------------------
  mysql:
    image: zshmeta/mysql:${MYSQL_SERVER}
    hostname: mysql

    environment:
      - MYSQL_ROOT_PASSWORD
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes

    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_MYSQL}:3306"

    networks:
      app_net:
        ipv4_address: 172.16.238.12

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount devpod user-defined cnf files in order
      # to overwrite the MySQL server configuration
      - ${DEVPOD_PATH}/.devpod/cfg/mysql.cnf:/etc/mysql/conf.d/devpod.cnf:ro${MOUNT_OPTIONS}
      - ${DEVPOD_PATH}/cfg/${MYSQL_SERVER}:/etc/mysql/docker-default.d:ro${MOUNT_OPTIONS}

      # Mount MySQL Data directory
      - devpod-${MYSQL_SERVER}:/var/lib/mysql:rw${MOUNT_OPTIONS}

    depends_on:
      - bind
      - php
      - httpd


  # ------------------------------------------------------------
  # PostgreSQL
  # ------------------------------------------------------------
  pgsql:
    image: postgres:${PGSQL_SERVER}
    hostname: pgsql

    environment:

      - POSTGRES_USER=${PGSQL_ROOT_USER}
      - POSTGRES_PASSWORD=${PGSQL_ROOT_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=${PGSQL_HOST_AUTH_METHOD:-trust}
      - PGDATA=/var/lib/postgresql/data/pgdata

    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_PGSQL}:5432"

    networks:
      app_net:
        ipv4_address: 172.16.238.13

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount PostgreSQL Data directory
      - devpod-pgsql-${PGSQL_SERVER}:/var/lib/postgresql/data/pgdata:rw${MOUNT_OPTIONS}

    depends_on:
      - bind
      - php
      - httpd


  # ------------------------------------------------------------
  # Redis
  # ------------------------------------------------------------
  redis:
    image: redis:${REDIS_SERVER}
    hostname: redis

    # Apply custom arguments to redis startup
    command: redis-server ${REDIS_ARGS:- }
    environment:
      - REDIS_ARGS=${REDIS_ARGS:- }

    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_REDIS}:6379"

    networks:
      app_net:
        ipv4_address: 172.16.238.14

    depends_on:
      - bind
      - php
      - httpd


  # ------------------------------------------------------------
  # Memcached
  # ------------------------------------------------------------
  memcd:
    image: memcached:${MEMCD_SERVER}
    hostname: memcd

    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_MEMCD}:11211"

    networks:
      app_net:
        ipv4_address: 172.16.238.15

    depends_on:
      - bind
      - php
      - httpd


  # ------------------------------------------------------------
  # MongoDB
  # ------------------------------------------------------------
  mongo:
    image: mongo:${MONGO_SERVER}
    hostname: mongo

    ports:
      # [local-machine:]local-port:docker-port
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_MONGO}:27017"

    networks:
      app_net:
        ipv4_address: 172.16.238.16

    volumes:
      # ---- Format: ----
      # HOST-DIRECTORY : DOCKER-DIRECTORY

      # Mount MongoDB Data directory
      - devpod-mongo-${MONGO_SERVER}:/data/db:rw${MOUNT_OPTIONS}

    depends_on:
      - bind
      - php
      - httpd


###############################################################################
#  NGROK
###############################################################################
  ngrok:
    image: zshmeta/ngrok:alpine
    hostname: ngrok
    environment:
      - HTTP_TUNNELS=${NGROK_HTTP_TUNNELS:-httpd:httpd:80}
      - AUTHTOKEN=${NGROK_AUTHTOKEN:-}
      - REGION=${NGROK_REGION:-us}
    ports:
      - "${LOCAL_LISTEN_ADDR}${HOST_PORT_NGROK:-4040}:4040"
    networks:
      app_net:
        ipv4_address: 172.16.238.202
    depends_on:
      - bind
      - php
      - httpd

###############################################################################
################################################################################
# NETWORK
################################################################################
networks:
  app_net:
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
          gateway: 172.16.238.1


################################################################################
# VOLUMES
################################################################################
volumes:
  # ------------------------------------------------------------
  # Misc
  # ------------------------------------------------------------
  devpod-mail:

  # ------------------------------------------------------------
  # MySQL
  # ------------------------------------------------------------


  devpod-mysql-8.0:
  devpod-mariadb-10.10:


  # ------------------------------------------------------------
  # Postgres
  # ------------------------------------------------------------


  devpod-pgsql-latest:
  devpod-pgsql-alpine:

  # ------------------------------------------------------------
  # MongoDB
  # ------------------------------------------------------------

  devpod-mongo-latest:
