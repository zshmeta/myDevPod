###
###  ---------------------------------------------------
###   D E V P O D   ----  S E T T I N G S
###  ---------------------------------------------------
###
###  This where you can set your own settings. All should work straight out the 'pod'
###  but you can change any of the settings below to suit your needs
###  New Settings take effect on the next 'pod' start
###  No need to rebuild any docker images just
###  IMPORTANT: MAKE SURE TO BE IN THE DEVPOD DIRECTORY
###  ----- "you can check what directory you are in by typing pwd" -----
###
###  $ docker-compose stop
###  $ docker-compose rm -f
###  $ docker-compose up
###
###  This will automatically pull the latest settings and launch the 'pod'
###  ---------------------------------------------------
###
###  IMPORTANT:
###  ----------
###  When changing any values Make sure to stop, rm and restart:
###
###  $ docker-compose stop
###  $ docker-compose rm -f
###  $ docker-compose up
###
###  NOTE:
###  -----
###  No need to change the settings below unless you know what you are doing
###

################################################################################
## For more information on the settings below, please see the docker doc file

###
###Debug settings for myDevpod
###
### 0: no debug errors -> 4: max logging

DEBUG_ENTRYPOINT=2


###
### Log to log files in the data/log directory
###
### 0: no logging -> 1: log to file

DOCKER_LOGS=0


###
### Relative or absolute path to the devilbox repository.
### (Used as a prefix for all mount paths)
### There is no need to change this.
###
### The only exception is for OSX users wanting to use NFS
### mounts instead of Filesystem mounts due to degraded performance
### on OSX.
###
### Note: When changing this variable you must re-create the container.
###       Simply remove it, it will be auto-created during the next start:
###
### $ docker-compose rm -f
###DEVPOD_PATH=.


###
### At what IP address should the docker services listen
### on the Host computer?
### Set desired IP here
### Note if setting NGROK don't set this
### Leave blank, to listen on all interfaces (no trailing colon ':')
###
### b.) If an IP is specified, add a trailing colon ':'
###    LOCAL_LISTEN_ADDR=127.0.0.1:
###

LOCAL_LISTEN_ADDR=


###
### This is the domain suffix your projects will be made available
### with mass-virtual-hosting.
### You can change this but you will need to update the optional DNS configuration below and your hosts file "/etc/hosts"
###
### Example:
###   if your project is located in ./data/www/mydevilpod
###   then your project will be available at http://mydevilpod.dvl.to:<port>
###

TLD_SUFFIX=dvl.to

###
### Optional DNS configuration
### Allows you to add extra DNS records (needed if TLD_SUFFIX was changed)
###
### Format:
### -------
###     EXTRA_HOSTS=<hostname>=<ip>[,<hostname>=<ip>]
###
### Examples:
### if your project is located in ./data/www/mydevilpod and TLD_SUFFIX was changed to .loc
### EXTRA_HOSTS=hostname.loc=1.2.3.4

EXTRA_HOSTS=

###
### Set your user id and group id
###
### find your users uid and gid bu typing
### Type `id` on the terminal to find out your values
### Typically uid=1000 and gid=1000 but could be different on your system
###

NEW_UID=1000
NEW_GID=1000


### Timezone for PHP Docker container (system and php.ini)
###
### if Timezone is not set, the default timezone is UTC.
### If your device's clock doesn't match the actual time, you may want to leave it on UTC.

TIMEZONE=UTC



################################################################################
###
### INTRANET SETTINGS
###
################################################################################

###
### TLD_SUFFIX domains are checked if they are set in the
### hosts file. Set timeout to avoid long delays.

DNS_CHECK_TIMEOUT=1


###
### myDevPod SSL Certificate generation
###

DEVPOD_UI_SSL_CN=localhost,*.localhost,devpod,*.devpod,httpd


###
### DevPod UI Password protection enable/disable (1/0)
###
### Set DevPod passwords to 1 for access to DevPod UI
###

DEVPOD_UI_PROTECT=0


###
### Devpod UI Password
###
### When DEVPOD_UI_PROTECT=1, use the following password
### to log in. The password can be changed.
### The default username is 'devpod'
###

DEVPOD_UI_PASSWORD=@mnesia13


###
### Enable the myDevPod Intranet
###

DEVPOD_UI_ENABLE=1


###
### Automatically be logged in into phpMyAdmin
### helps with common password issues
###

DEVPOD_VENDOR_PHPMYADMIN_AUTOLOGIN=1


###
### Automatically be logged in into phpPgAdmin
###same with phpPgAdmin
###

DEVPOD_VENDOR_PHPPGADMIN_AUTOLOGIN=1

###
### HTTPD Supvervisord management
###

DEVPOD_HTTPD_MGMT_USER=mySuperDevpod
DEVPOD_HTTPD_MGMT_PASS=mySuperDevpod



################################################################################
###
### 1. Choose versions
###
################################################################################

###
### You can choose any combination of httpd, mysql, postgresql or php.
### Each of them are fully compatible between one another.
###


###
### 1.1 Choose PHP version
###
###
#PHP_SERVER=8.0
PHP_SERVER=8.1
#PHP_SERVER=8.2


###
### 1.2 Choose base + server
###
### Choose between 'debian' or 'alpine' autonatically gets  :latest
###
### Note: apache-2.2 doesn't work properly on alpine 'alpine'
###
HTTPD_FLAVOUR=alpine

#HTTPD_SERVER=apache-2.2
#HTTPD_SERVER=apache-2.4
HTTPD_SERVER=nginx-stable
#HTTPD_SERVER=nginx-mainline


###
### 1.3 Choose MySQL
###

MYSQL_SERVER=mysql-8.0

#MYSQL_SERVER=percona-8.0

#MYSQL_SERVER=mariadb-10.6
#MYSQL_SERVER=mariadb-10.10


###
### 1.4 Choose PostgreSQL
#PGSQL_SERVER=13
#PGSQL_SERVER=13-alpine
#PGSQL_SERVER=latest
PGSQL_SERVER=alpine


###
### 1.5 Choose Redis Server Image
###

#REDIS_SERVER=7.0
#REDIS_SERVER=7.0-alpine
#REDIS_SERVER=latest
REDIS_SERVER=alpine


###
### 1.6 Choose Memcached version
###

#MEMCD_SERVER=1.6
#MEMCD_SERVER=1.6-alpine
#MEMCD_SERVER=latest
MEMCD_SERVER=alpine


###
### 1.7 Choose Mongo Version
###
### https://www.mongodb.com/evolved
###
#
# MongoDB without arm64 support
#


#MONGO_SERVER=4.4
#MONGO_SERVER=5.0
MONGO_SERVER=latest



################################################################################
###
### 2. Host Mounts (Your computer)
###
################################################################################

###
### Global mount options
###
### Note: When adding custom mount options, ensure to start with a
###       leading ',' (comma), as those options are prepended to already
###       existing mount options.
###
### Note: If no mount options are specified, leave this variable empty
###       and do not add a leading ',' (comma).
###
### MOUNT_OPTIONS=,cached
### MOUNT_OPTIONS=
###
### Example: Allow to share mounts accross container with SELINUX enabled
###
### MOUNT_OPTIONS=,z
###

MOUNT_OPTIONS=


###
### Local filesystem path to www projects.
### if value is changed, you must re-create the container.
### $ docker-compose rm -f
###

HOST_PATH_HTTPD_DATADIR=./data/www


###
### Local filesystem path to where backups are stored
###

HOST_PATH_BACKUPDIR=./backups


###
### The path on your host OS of the ssh directory to be mounted into the
### PHP container into /home/devpod/.ssh.
###

HOST_PATH_SSH_DIR=~/.ssh



################################################################################
###
### 3. PHP Docker Settings
###
################################################################################

###
### Enable certain PHP modules which are not enabled by default
###
### Currently the only modules that can be enabled are 'ioncube' and 'blackfire'
### Also ensure to disable xdebug when using any of the above:
### https://xdebug.org/docs/install#compat
###
### PHP_MODULES_ENABLE=ioncube, blackfire
###

PHP_MODULES_ENABLE=


###
### Disable any PHP modules that you don't require
###
### Specify a comma separated list without spaces of modules to disable
###
### PHP_MODULES_DISABLE=xdebug,imagick,swoole
###

PHP_MODULES_DISABLE=oci8,PDO_OCI,pdo_sqlsrv,sqlsrv,rdkafka,swoole,psr,phalcon,Wscat,xdebug,xhprof,xhgui,grunt-cli,gulp,bower


###
### Postfix settings for email catch-all
###
### Values:
### 0: Disable postfix (do not start it)
### 1: Enable/Start postfix
### 2: Enable/Start postfix and enable email catch-all
###

PHP_MAIL_CATCH_ALL=2


###
### Configure everything else about PHP in
### * cfg/php-ini-X.X/*.ini
### * cfg/php-fpm-X.X/*.conf



################################################################################
###
### 4. HTTPD Docker Settings
###
################################################################################

###
### Expose HTTPD Port to Host
###

HOST_PORT_HTTPD=80
HOST_PORT_HTTPD_SSL=443


###
### Globally enable/disable HTTP/2 support
###
### This cannot be done on a per vhost level and must be enabled/disabled globally.
###
### Values:
###  * 0: HTTP/2 is disabled
###  * 1: HTTP/2 is enabled
###

HTTPD_HTTP2_ENABLE=1


###
### SSL (HTTP/HTTPS) settings for automated vhost generation
###
### By default each project will have two vhosts (one for HTTP and one for HTTPS).
### You can control the SSL settings for your projects via the below stated values.
###
### This is internally achieved via the '-m' argument of https://github.com/devilbox/vhost-gen
###
### Values:
###   * both:  Serve HTTP and HTTPS for all projects
###   * redir: HTTP always redirects to HTTPS
###   * ssl:   Only serve HTTPS
###   * plain: Only serve HTTP
###

HTTPD_VHOST_SSL_TYPE=both


###
### Document Root Subdirectory 'htdocs'
###
### When changing this value, restart myDevpod
###

HTTPD_DOCROOT_DIR=htdocs


###
### Per vHost Config Subdirectory
###
### In your project directory, this folder will be used to store
### vhost configuration files for apache or nginx.
###
### When changing this value, restart the myDevpod
###

HTTPD_TEMPLATE_DIR=.devpod


###
### Remote (Upstream) Backend Timeout
###
### Leave timeout higher than PHP loading time

HTTPD_BACKEND_TIMEOUT=180


###
### NGINX SETTINGS
###
### Followed their recommendations:
###
### https://nginx.org/en/docs/ngx_core_module.html#worker_processes
### https://nginx.org/en/docs/ngx_core_module.html#worker_connections
###
HTTPD_NGINX_WORKER_PROCESSES=auto
HTTPD_NGINX_WORKER_CONNECTIONS=1024



################################################################################
###
### 5. MySQL Docker Settings
###
################################################################################

###
### MySQL root user password
###
###
### If you change your MySQL root user password via mysql cli, phpMyAdmin or other tools
### after the database has been created, ensure to adjust the value here accordingly as well.
###
###

MYSQL_ROOT_PASSWORD=devpod


###
### Expose MySQL Port to Host
###

HOST_PORT_MYSQL=3306



################################################################################
###
### 6. PostgreSQL Docker Settings
###
################################################################################

###
### PostgreSQL 'root' user name (usually postgres)
###

PGSQL_ROOT_USER=devpod


###
### PostgreSQL 'root' user password
###
### If you want to set a password, ensure to remove 'trust' from
### PGSQL_HOST_AUTH_METHOD below
###

PGSQL_ROOT_PASSWORD=


###
### In order to not use a password for PostgreSQL, keep this value at 'trust'
###

PGSQL_HOST_AUTH_METHOD=trust


###
### Expose PostgreSQL Port to Host
###

HOST_PORT_PGSQL=5432



################################################################################
###
### 8. Memcached Docker Settings
###
################################################################################

###
### Expose Memcached Port to Host
###

HOST_PORT_MEMCD=11211



################################################################################
###
### 9. MongoDB Docker Settings
###
################################################################################

###
### Expose MongoDB Port to Host
###

HOST_PORT_MONGO=27017



################################################################################
###
### 10. Bind Docker Settings
###
################################################################################

###
### Expose Bind Port to Host
###

HOST_PORT_BIND=1053


###
### Add comma separated DNS server from which you want to receive DNS
### You can also add DNS servers from your LAN (if any are available)
###

BIND_DNS_RESOLVER=8.8.8.8,8.8.4.4


###
### Validate DNSSEC
###
### Values:
###  no:    DNSSEC validation is disabled
###  yes:   DNSSEC validation is enabled, but a trust anchor must be manually configured.
###  auto:  DNSSEC validation is enabled, and a default trust anchor for root zone is used.
###

BIND_DNSSEC_VALIDATE=no


###
### Bind timing options (time in seconds)
###
### Leave empty for defaults.
### Only change when you know what you are doing.
###

BIND_TTL_TIME=
BIND_REFRESH_TIME=
BIND_RETRY_TIME=
BIND_EXPIRY_TIME=
BIND_MAX_CACHE_TIME=


###
### Show DNS Queries in Docker logs output?
###
### 1: Yes
### 0: No

BIND_LOG_DNS_QUERIES=0



################################################################################
###
### 11. Custom variables
###
################################################################################

###
### Any variable defined in this file will be available
### as environment variables to your PHP/HHV Docker container.
###
### This might be useful to set application environment and retrieve
### them via: <?php getenv('MY_APPLICATION_ENV'); ?>
###


###
### Example:
### <?php echo getenv('Foo'); ?> would produce: 'some value'
###
#Foo=some value
